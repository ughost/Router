/* AUTOGENERATED DEVELOPMENT CODE */
(function() {
    this.Router = {
        _: {},
        get: function(selector, params) {
            var _, collection, i, len, param, stage, stages, value;
            value = "";
            if (selector.indexOf(".") !== -1) {
                stages = selector.split(".");
                _ = this._;
                for (i = 0, len = stages.length; i < len; i++) {
                    stage = stages[i];
                    collection = _[stage];
                    if (collection !== void 0) {
                        if (typeof collection !== "string") {
                            _ = collection;
                        } else {
                            value = collection;
                        }
                    } else {
                        break;
                    }
                }
            } else {
                value = this._[selector] || "";
            }
            if (params !== void 0) {
                for (param in params) {
                    value = value.replace(new RegExp("\\%" + param + "\\%", "i"), params[param]);
                }
            }
            return value;
        },
        set: function(selector, value) {
            var data, key, last, name, results, stages;
            if (selector.indexOf(".") === -1) {
                return this._[selector] = value;
            } else {
                stages = selector.split(".");
                data = this._;
                last = stages.length - 1;
                results = [];
                for (key in stages) {
                    name = stages[key];
                    if (key * 1 === last) {
                        results.push(data[name] = value);
                    } else {
                        if (data[name] === void 0) {
                            data[name] = {};
                        }
                        results.push(data = data[name]);
                    }
                }
                return results;
            }
        }
    };
}).call(this);